name: SpeedShare Publish Actions
on:
  push:
    branches:
      - main
    # paths-ignore
  
  repository_dispatch:
    types:
      - api
  
  workflow_dispatch:

env:
  # APPÂêçÁß∞
  APP_NAME: SpeedShare
  ZIP_NAME: Speed Share

jobs:
  # build-linux:
  #   runs-on: ubuntu-latest
  #   steps:

  #     - run: |
  #         echo ${{ github.event.client_payload.version }}
  #         echo ${{ github.event.client_payload.version_code }}
  #     - name: Checkout the code
  #       uses: actions/checkout@v3
  #       with:
  #         ref: ${{ github.event.client_payload.ref }}
  #     - name: Install and set Flutter version
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'

  #     - name: Setup other environment
  #       run: |
  #         sudo apt-get update -y
  #         sudo apt-get install -y ninja-build libgtk-3-dev
  #         # tray manager need
  #         sudo apt-get install libayatana-appindicator3-dev

  #     - name: Building
  #       run: |
  #         flutter config --enable-linux-desktop 
  #         flutter build linux --dart-define=VERSION=${{ github.event.client_payload.version }} --dart-define=VERSION_CODE=${{ github.event.client_payload.version_code }} 
      
  #     - name: Packaging
  #       run: ./scripts/build/generate_linux.sh
      
  #     - name: Release
  #       run: |
  #         curl --upload-file "${{ env.ZIP_NAME }}.deb" https://transfer.sh/${{ env.APP_NAME }}.deb

  build-mac:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      # - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      # - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      # - name: Check out repository code
      #   uses: actions/checkout@v3
      # - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      # - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."

      # - run: echo "üçè This job's status is ${{ job.status }}."
      - name: Checkout the code
        uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: 'mengyanshou/speed_share_extension'
      
      - uses: actions/checkout@v3
        with:
          repository: 'mengyanshou/user_center_frontend'
          
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: actions/setup-node@v2
        uses: actions/setup-node@v2   
      
      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          
      - name: Setup other environment
        run: npm install -g appdmg
        
      - name: Building
        run: |
          flutter config --enable-macos-desktop
          flutter build macos --dart-define=VERSION=${{ github.event.client_payload.version }} --dart-define=VERSION_CODE=${{ github.event.client_payload.version_code }} 

      - name: Packaging
        run: |
          ./scripts/build/generate_mac_app.sh

      - name: Release
        run: |
          curl --upload-file "${{ env.ZIP_NAME }}.dmg" https://transfer.sh/${{ env.APP_NAME }}_macOS.dmg
            
  # build-windows:
  #   # The type of runner that the job will run on
  #   runs-on: windows-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:

  #     - name: Checkout the code
  #       uses: actions/checkout@v3

  #     - name: Install and set Flutter version
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'
          
  #     - name: Building...
  #       run: |
  #         flutter config --enable-windows-desktop
  #         flutter build windows --dart-define=VERSION=${{ github.event.client_payload.version }} --dart-define=VERSION_CODE=${{ github.event.client_payload.version_code }} 

  #     - name: Packaging
  #       run: |
  #         .\scripts\patch_executable.bat
  #         Compress-Archive -Path .\build\windows\runner\Release\* -DestinationPath "${{ env.ZIP_NAME }}_Windows.zip"

  #     - name: Release
  #       run: |
  #         curl --upload-file "${{ env.ZIP_NAME }}_Windows.zip" "https://transfer.sh/${{ env.APP_NAME }}_Windows.zip"